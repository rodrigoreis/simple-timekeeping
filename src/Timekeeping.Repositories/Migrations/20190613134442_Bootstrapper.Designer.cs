// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timekeeping.Repositories.Contexts;

namespace Timekeeping.Repositories.Migrations
{
    [DbContext(typeof(TimekeepingContext))]
    [Migration("20190613134442_Bootstrapper")]
    partial class Bootstrapper
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Timekeeping.Repositories.Abstractions.Models.ProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("project_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobJourneyCharge")
                        .HasColumnName("project_job_journey_charge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("project_name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(150);

                    b.HasKey("Id")
                        .HasName("pk_projects_project_id");

                    b.HasIndex("Name")
                        .HasName("ix_projects_project_name");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Timekeeping.Repositories.Abstractions.Models.TimeEntryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("time_entry_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnName("time_entry_amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnName("time_entry_date")
                        .HasColumnType("DATETIME");

                    b.Property<int>("ProjectId")
                        .HasColumnName("project_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id")
                        .HasName("pk_time_entries_time_entry_id");

                    b.HasIndex("Date")
                        .HasName("ix_time_entries_time_entry_date");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("time_entries");
                });

            modelBuilder.Entity("Timekeeping.Repositories.Abstractions.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("user_email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("user_name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(150);

                    b.Property<int?>("ProjectId")
                        .HasColumnName("project_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id")
                        .HasName("pk_users_user_id");

                    b.HasIndex("Email")
                        .HasName("ix_users_user_email");

                    b.HasIndex("ProjectId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Timekeeping.Repositories.Abstractions.Models.TimeEntryModel", b =>
                {
                    b.HasOne("Timekeeping.Repositories.Abstractions.Models.ProjectModel", "Project")
                        .WithMany("TimeEntries")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_projects_time_entries_project_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timekeeping.Repositories.Abstractions.Models.UserModel", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_users_time_entries_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timekeeping.Repositories.Abstractions.Models.UserModel", b =>
                {
                    b.HasOne("Timekeeping.Repositories.Abstractions.Models.ProjectModel", "Project")
                        .WithMany("Users")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_projects_users_project_id");
                });
#pragma warning restore 612, 618
        }
    }
}
